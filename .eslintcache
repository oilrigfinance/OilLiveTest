[{"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\index.tsx":"1","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\App.tsx":"2","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\Providers.tsx":"3","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\style\\Global.tsx":"4","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\PageLoader.tsx":"5","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\NotFound.tsx":"6","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\NftGlobalNotification.tsx":"7","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\state\\hooks.ts":"8","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\index.ts":"9","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\index.ts":"10","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\getRpcUrl.ts":"11","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\Menu\\index.tsx":"12","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\contexts\\ThemeContext.tsx":"13","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\contexts\\BlockContext.tsx":"14","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\contexts\\RefreshContext.tsx":"15","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\contexts\\Localisation\\languageContext.tsx":"16","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\layout\\Page.tsx":"17","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\state\\index.ts":"18","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\state\\actions.ts":"19","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\config\\constants\\types.ts":"20","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\Menu\\config.ts":"21","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\Home.tsx":"22","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\Farms.tsx":"23","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\multicall.ts":"24","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useI18n.ts":"25","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\config\\constants\\nfts.ts":"26","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\layout\\Container.tsx":"27","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useRefresh.ts":"28","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useTheme.ts":"29","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\web3.ts":"30","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\contexts\\Localisation\\translationsContext.ts":"31","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\config\\localisation\\languageCodes.ts":"32","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\translateTextHelpers.ts":"33","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\components\\TwitterCard.tsx":"34","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\Divider.tsx":"35","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\components\\CakeStats.tsx":"36","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\components\\TotalValueLockedCard.tsx":"37","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\components\\FarmStakingCard.tsx":"38","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\FarmCard\\FarmCard.tsx":"39","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\state\\pools\\index.ts":"40","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\addressHelpers.ts":"41","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\state\\farms\\index.ts":"42","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\layout\\Flex.tsx":"43","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\FarmTabButtons\\index.tsx":"44","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\formatBalance.ts":"45","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useAllEarnings.ts":"46","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useTokenBalance.ts":"47","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\components\\CakeWalletBalance.tsx":"48","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\FarmCard\\ApyButton.tsx":"49","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\state\\pools\\fetchPools.ts":"50","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\state\\pools\\fetchPoolsUser.ts":"51","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\FarmCard\\CardActionsContainer.tsx":"52","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\FarmCard\\CardHeading.tsx":"53","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\config\\index.ts":"54","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\state\\farms\\fetchFarmUser.ts":"55","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\state\\farms\\fetchFarms.ts":"56","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\components\\CardValue.tsx":"57","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\FarmCard\\ApyCalculatorModal.tsx":"58","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\components\\CakeHarvestBalance.tsx":"59","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\FarmCard\\DetailsSection.tsx":"60","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\config\\constants\\pools.ts":"61","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\FarmCard\\HarvestAction.tsx":"62","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\FarmCard\\StakeAction.tsx":"63","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\config\\constants\\contracts.ts":"64","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\config\\constants\\farms.ts":"65","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\erc20.ts":"66","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useFarmsWithBalance.ts":"67","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useHarvest.ts":"68","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\UnlockButton.tsx":"69","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useApprove.ts":"70","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useStake.ts":"71","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\Tags.tsx":"72","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\config\\constants\\index.ts":"73","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\WithdrawModal.tsx":"74","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\DepositModal.tsx":"75","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\compoundApyHelpers.ts":"76","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\getLiquidityUrlPathParts.ts":"77","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useContract.ts":"78","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\ExpandableSectionButton\\index.ts":"79","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useUnstake.ts":"80","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\config\\constants\\ifo.ts":"81","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\callHelpers.ts":"82","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\ExpandableSectionButton\\ExpandableSectionButton.tsx":"83","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useWeb3.ts":"84","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\TokenInput\\index.ts":"85","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\ModalActions\\index.ts":"86","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\TokenInput\\TokenInput.tsx":"87","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\ModalActions\\ModalActions.tsx":"88","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\Input\\index.ts":"89","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\Spacer\\index.ts":"90","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\Input\\Input.tsx":"91","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\Spacer\\Spacer.tsx":"92","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\components\\CardValueString.tsx":"93","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\components\\EarnCard.tsx":"94","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\components\\CardValueStringNormal.tsx":"95","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\components\\StakeCard.tsx":"96","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\FarmCard\\CardActionsContainerLock.tsx":"97","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\index.tsx":"98","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\NftInfo.tsx":"99","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\HowItWorks.tsx":"100","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\NftList.tsx":"101","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\contexts\\NftProvider.tsx":"102","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\utils\\contracts.ts":"103","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\StatusCard.tsx":"104","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\NftProgress.tsx":"105","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\NftProgressSimple.tsx":"106","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\NftGrid.tsx":"107","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useBlock.ts":"108","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\NftCard\\index.tsx":"109","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\NftInWalletCard.tsx":"110","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\YouWonCard.tsx":"111","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\NoNftsToClaimCard.tsx":"112","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\InfoRow.tsx":"113","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\getTimePeriods.ts":"114","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\formatTimePeriod.ts":"115","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\Image.tsx":"116","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\BurnNftModal.tsx":"117","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\ClaimNftModal.tsx":"118","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\TransferNftModal.tsx":"119","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\SecondaryCard.tsx":"120","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\CardContent.tsx":"121"},{"size":278,"mtime":1621609080882,"results":"122","hashOfConfig":"123"},{"size":2703,"mtime":1622814009849,"results":"124","hashOfConfig":"123"},{"size":1393,"mtime":1621609080846,"results":"125","hashOfConfig":"123"},{"size":599,"mtime":1623172242665,"results":"126","hashOfConfig":"123"},{"size":397,"mtime":1621609080854,"results":"127","hashOfConfig":"123"},{"size":856,"mtime":1621609080947,"results":"128","hashOfConfig":"123"},{"size":2937,"mtime":1621609080939,"results":"129","hashOfConfig":"123"},{"size":3484,"mtime":1622738955823,"results":"130","hashOfConfig":"123"},{"size":34,"mtime":1621609080908,"results":"131","hashOfConfig":"123"},{"size":35,"mtime":1621609080902,"results":"132","hashOfConfig":"123"},{"size":329,"mtime":1621609080893,"results":"133","hashOfConfig":"123"},{"size":1147,"mtime":1621609080853,"results":"134","hashOfConfig":"123"},{"size":921,"mtime":1623085927481,"results":"135","hashOfConfig":"123"},{"size":772,"mtime":1621609080873,"results":"136","hashOfConfig":"123"},{"size":942,"mtime":1621609080875,"results":"137","hashOfConfig":"123"},{"size":3233,"mtime":1621609080873,"results":"138","hashOfConfig":"123"},{"size":426,"mtime":1621609080861,"results":"139","hashOfConfig":"123"},{"size":286,"mtime":1621609080886,"results":"140","hashOfConfig":"123"},{"size":265,"mtime":1621609080883,"results":"141","hashOfConfig":"123"},{"size":1774,"mtime":1621609080871,"results":"142","hashOfConfig":"123"},{"size":1230,"mtime":1623163974504,"results":"143","hashOfConfig":"123"},{"size":2167,"mtime":1623222340086,"results":"144","hashOfConfig":"123"},{"size":4855,"mtime":1623173547595,"results":"145","hashOfConfig":"123"},{"size":964,"mtime":1621609080894,"results":"146","hashOfConfig":"123"},{"size":566,"mtime":1621609080878,"results":"147","hashOfConfig":"123"},{"size":2434,"mtime":1623170274477,"results":"148","hashOfConfig":"123"},{"size":321,"mtime":1623173256202,"results":"149","hashOfConfig":"123"},{"size":260,"mtime":1621609080880,"results":"150","hashOfConfig":"123"},{"size":371,"mtime":1621609080880,"results":"151","hashOfConfig":"123"},{"size":770,"mtime":1621609080895,"results":"152","hashOfConfig":"123"},{"size":404,"mtime":1621609080874,"results":"153","hashOfConfig":"123"},{"size":2053,"mtime":1621609080872,"results":"154","hashOfConfig":"123"},{"size":1614,"mtime":1621609080895,"results":"155","hashOfConfig":"123"},{"size":1382,"mtime":1623163290840,"results":"156","hashOfConfig":"123"},{"size":193,"mtime":1621609080897,"results":"157","hashOfConfig":"123"},{"size":2688,"mtime":1623158135267,"results":"158","hashOfConfig":"123"},{"size":1313,"mtime":1623158443673,"results":"159","hashOfConfig":"123"},{"size":3716,"mtime":1623153553803,"results":"160","hashOfConfig":"123"},{"size":6557,"mtime":1623160949389,"results":"161","hashOfConfig":"123"},{"size":3825,"mtime":1621609080887,"results":"162","hashOfConfig":"123"},{"size":604,"mtime":1621609080889,"results":"163","hashOfConfig":"123"},{"size":2133,"mtime":1621609080885,"results":"164","hashOfConfig":"123"},{"size":298,"mtime":1621609080861,"results":"165","hashOfConfig":"123"},{"size":1319,"mtime":1621609080901,"results":"166","hashOfConfig":"123"},{"size":400,"mtime":1621609080891,"results":"167","hashOfConfig":"123"},{"size":996,"mtime":1621609080876,"results":"168","hashOfConfig":"123"},{"size":2002,"mtime":1621609080881,"results":"169","hashOfConfig":"123"},{"size":767,"mtime":1621609080905,"results":"170","hashOfConfig":"123"},{"size":1051,"mtime":1621609080897,"results":"171","hashOfConfig":"123"},{"size":2433,"mtime":1621609080886,"results":"172","hashOfConfig":"123"},{"size":3484,"mtime":1621609080887,"results":"173","hashOfConfig":"123"},{"size":3318,"mtime":1623164687541,"results":"174","hashOfConfig":"123"},{"size":1355,"mtime":1623160663863,"results":"175","hashOfConfig":"123"},{"size":295,"mtime":1621609080871,"results":"176","hashOfConfig":"123"},{"size":2532,"mtime":1621609080884,"results":"177","hashOfConfig":"123"},{"size":4715,"mtime":1622806046345,"results":"178","hashOfConfig":"123"},{"size":871,"mtime":1623219463658,"results":"179","hashOfConfig":"123"},{"size":4733,"mtime":1623163476473,"results":"180","hashOfConfig":"123"},{"size":676,"mtime":1621609080904,"results":"181","hashOfConfig":"123"},{"size":2219,"mtime":1621609080899,"results":"182","hashOfConfig":"123"},{"size":1243,"mtime":1621609080871,"results":"183","hashOfConfig":"123"},{"size":2041,"mtime":1621609080900,"results":"184","hashOfConfig":"123"},{"size":2146,"mtime":1621609080901,"results":"185","hashOfConfig":"123"},{"size":595,"mtime":1622723461392,"results":"186","hashOfConfig":"123"},{"size":2943,"mtime":1622798650135,"results":"187","hashOfConfig":"123"},{"size":1105,"mtime":1621609080890,"results":"188","hashOfConfig":"123"},{"size":1334,"mtime":1621609080878,"results":"189","hashOfConfig":"123"},{"size":2055,"mtime":1621609080878,"results":"190","hashOfConfig":"123"},{"size":545,"mtime":1621609080859,"results":"191","hashOfConfig":"123"},{"size":2535,"mtime":1621609080877,"results":"192","hashOfConfig":"123"},{"size":1690,"mtime":1621609080880,"results":"193","hashOfConfig":"123"},{"size":819,"mtime":1621609080856,"results":"194","hashOfConfig":"123"},{"size":279,"mtime":1621609080870,"results":"195","hashOfConfig":"123"},{"size":1914,"mtime":1621609080902,"results":"196","hashOfConfig":"123"},{"size":1851,"mtime":1622802722920,"results":"197","hashOfConfig":"123"},{"size":1316,"mtime":1621609080890,"results":"198","hashOfConfig":"123"},{"size":584,"mtime":1621609080892,"results":"199","hashOfConfig":"123"},{"size":2834,"mtime":1621609080878,"results":"200","hashOfConfig":"123"},{"size":53,"mtime":1621609080849,"results":"201","hashOfConfig":"123"},{"size":2033,"mtime":1621609080882,"results":"202","hashOfConfig":"123"},{"size":4693,"mtime":1621609080869,"results":"203","hashOfConfig":"123"},{"size":3448,"mtime":1621609080889,"results":"204","hashOfConfig":"123"},{"size":938,"mtime":1621609080849,"results":"205","hashOfConfig":"123"},{"size":1023,"mtime":1621609080882,"results":"206","hashOfConfig":"123"},{"size":40,"mtime":1621609080858,"results":"207","hashOfConfig":"123"},{"size":42,"mtime":1621609080854,"results":"208","hashOfConfig":"123"},{"size":2084,"mtime":1621609080858,"results":"209","hashOfConfig":"123"},{"size":797,"mtime":1621609080853,"results":"210","hashOfConfig":"123"},{"size":78,"mtime":1621609080851,"results":"211","hashOfConfig":"123"},{"size":36,"mtime":1621609080855,"results":"212","hashOfConfig":"123"},{"size":1164,"mtime":1621609080850,"results":"213","hashOfConfig":"123"},{"size":722,"mtime":1621609080855,"results":"214","hashOfConfig":"123"},{"size":477,"mtime":1623219523866,"results":"215","hashOfConfig":"123"},{"size":1212,"mtime":1623158520897,"results":"216","hashOfConfig":"123"},{"size":496,"mtime":1623219520818,"results":"217","hashOfConfig":"123"},{"size":1278,"mtime":1623219525387,"results":"218","hashOfConfig":"123"},{"size":3209,"mtime":1623164695782,"results":"219","hashOfConfig":"123"},{"size":1090,"mtime":1623168780841,"results":"220","hashOfConfig":"123"},{"size":788,"mtime":1621609080941,"results":"221","hashOfConfig":"123"},{"size":2333,"mtime":1623171906130,"results":"222","hashOfConfig":"123"},{"size":417,"mtime":1622815438438,"results":"223","hashOfConfig":"123"},{"size":6803,"mtime":1621609080946,"results":"224","hashOfConfig":"123"},{"size":979,"mtime":1621609080947,"results":"225","hashOfConfig":"123"},{"size":1387,"mtime":1621609080944,"results":"226","hashOfConfig":"123"},{"size":2994,"mtime":1621609080942,"results":"227","hashOfConfig":"123"},{"size":1085,"mtime":1621609080942,"results":"228","hashOfConfig":"123"},{"size":338,"mtime":1621609080940,"results":"229","hashOfConfig":"123"},{"size":214,"mtime":1621609080877,"results":"230","hashOfConfig":"123"},{"size":5478,"mtime":1622818031818,"results":"231","hashOfConfig":"123"},{"size":638,"mtime":1621609080940,"results":"232","hashOfConfig":"123"},{"size":604,"mtime":1621609080945,"results":"233","hashOfConfig":"123"},{"size":746,"mtime":1621609080943,"results":"234","hashOfConfig":"123"},{"size":177,"mtime":1621609080938,"results":"235","hashOfConfig":"123"},{"size":1290,"mtime":1621609080893,"results":"236","hashOfConfig":"123"},{"size":588,"mtime":1621609080891,"results":"237","hashOfConfig":"123"},{"size":942,"mtime":1621609080938,"results":"238","hashOfConfig":"123"},{"size":3398,"mtime":1621609080936,"results":"239","hashOfConfig":"123"},{"size":2931,"mtime":1621609080937,"results":"240","hashOfConfig":"123"},{"size":3502,"mtime":1621609080944,"results":"241","hashOfConfig":"123"},{"size":295,"mtime":1621609080944,"results":"242","hashOfConfig":"123"},{"size":504,"mtime":1621609080936,"results":"243","hashOfConfig":"123"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},"wovjdv",{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"246"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"246"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"246"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"246"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"246"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"246"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"246"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"246"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"246"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"246"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"246"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"246"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"246"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"246"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"246"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"246"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"246"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"246"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"246"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"246"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"246"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"246"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\index.tsx",[],["510","511","512","513","514"],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\App.tsx",["515"],"import React, { useEffect, Suspense, lazy } from 'react'\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useFetchPublicData } from 'state/hooks'\r\nimport GlobalStyle from './style/Global'\r\nimport Menu from './components/Menu'\r\nimport PageLoader from './components/PageLoader'\r\nimport NftGlobalNotification from './views/Nft/components/NftGlobalNotification'\r\n\r\n// Route-based code splitting\r\n// Only pool is included in the main bundle because of it's the most visited page'\r\nconst Home = lazy(() => import('./views/Home'))\r\nconst Farms = lazy(() => import('./views/Farms'))\r\n// const Lottery = lazy(() => import('./views/Lottery'))\r\n// const Pools = lazy(() => import('./views/Pools'))\r\n// const Ifos = lazy(() => import('./views/Ifos'))\r\nconst NotFound = lazy(() => import('./views/NotFound'))\r\nconst Nft = lazy(() => import('./views/Nft'))\r\n\r\n// This config is required for number formating\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nconst App: React.FC = () => {\r\n  const { account, connect } = useWallet()\r\n  useEffect(() => {\r\n    if (!account && window.localStorage.getItem('accountStatus')) {\r\n      connect('injected')\r\n    }\r\n  }, [account, connect])\r\n\r\n  useFetchPublicData()\r\n\r\n  return (\r\n    <Router>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      <Menu>\r\n        <Suspense fallback={<PageLoader />}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/farms\">\r\n              <Farms />\r\n            </Route>\r\n            <Route path=\"/nests\">\r\n              <Farms tokenMode/>\r\n            </Route>\r\n            {/* <Route path=\"/pools\"> */}\r\n            {/*  <Pools /> */}\r\n            {/* </Route> */}\r\n            {/* <Route path=\"/lottery\"> */}\r\n            {/*  <Lottery /> */}\r\n            {/* </Route> */}\r\n            {/* <Route path=\"/ifo\"> */}\r\n            {/*  <Ifos /> */}\r\n            {/* </Route> */}\r\n            <Route path=\"/nft\">\r\n              <Nft />\r\n            </Route>\r\n            {/* Redirect */}\r\n            {/* <Route path=\"/staking\"> */}\r\n            {/*  <Redirect to=\"/pools\" /> */}\r\n            {/* </Route> */}\r\n            {/* <Route path=\"/syrup\"> */}\r\n            {/*  <Redirect to=\"/pools\" /> */}\r\n            {/* </Route> */}\r\n            {/* 404 */}\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Suspense>\r\n      </Menu>\r\n      <NftGlobalNotification />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default React.memo(App)\r\n","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\Providers.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\style\\Global.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\PageLoader.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\NotFound.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\NftGlobalNotification.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\state\\hooks.ts",["516","517"],"import BigNumber from 'bignumber.js'\r\nimport { useEffect, useMemo } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\r\nimport { State, Farm, Pool } from './types'\r\nimport { QuoteToken } from '../config/constants/types'\r\n\r\nconst ZERO = new BigNumber(0)\r\n\r\nexport const useFetchPublicData = () => {\r\n  const dispatch = useDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync())\r\n    // dispatch(fetchPoolsPublicDataAsync())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\n// Farms\r\n\r\nexport const useFarms = (): Farm[] => {\r\n  const farms = useSelector((state: State) => state.farms.data)\r\n  return farms\r\n}\r\n\r\nexport const useFarmFromPid = (pid): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return farm\r\n}\r\n\r\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return farm\r\n}\r\n\r\nexport const useFarmUser = (pid) => {\r\n  const farm = useFarmFromPid(pid)\r\n\r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\r\n  }\r\n}\r\n\r\n\r\n// Pools\r\n\r\nexport const usePools = (account): Pool[] => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const pools = useSelector((state: State) => state.pools.data)\r\n  return pools\r\n}\r\n\r\nexport const usePoolFromPid = (sousId): Pool => {\r\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\r\n  return pool\r\n}\r\n\r\n// Prices\r\n\r\nexport const usePriceBnbBusd = (): BigNumber => {\r\n  const pid = 2 // BUSD-BNB LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceCakeBusd = (): BigNumber => {\r\n  // const pid = 1 // CAKE-BNB LP\r\n  // const bnbPriceUSD = usePriceBnbBusd()\r\n  // const farm = useFarmFromPid(pid)\r\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\r\n  const pid = 0; // EGG-BUSD LP\r\n  const farm = useFarmFromPid(pid);\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\r\n}\r\n\r\nexport const useTotalValue = (): BigNumber => {\r\n  const farms = useFarms();\r\n  const bnbPrice = usePriceBnbBusd();\r\n  const cakePrice = usePriceCakeBusd();\r\n  let value = new BigNumber(0);\r\n  for (let i = 0; i < farms.length; i++) {\r\n    const farm = farms[i]\r\n    if (farm.lpTotalInQuoteToken) {\r\n      let val;\r\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n        val = (bnbPrice.times(farm.lpTotalInQuoteToken));\r\n      }else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n        val = (cakePrice.times(farm.lpTotalInQuoteToken));\r\n      }else{\r\n        val = (farm.lpTotalInQuoteToken);\r\n      }\r\n      value = value.plus(val);\r\n    }\r\n  }\r\n  return value;\r\n}","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\index.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\index.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\getRpcUrl.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\Menu\\index.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\contexts\\ThemeContext.tsx",["518"],"import React, { useState } from 'react'\r\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\r\nimport { light, dark } from '@pancakeswap-libs/uikit'\r\n\r\nconst CACHE_KEY = 'IS_DARK'\r\n\r\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\r\n\r\nconst ThemeContextProvider = ({ children }) => {\r\n  const [isDark, setIsDark] = useState(() => {\r\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\r\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\r\n  })\r\n\r\n  const toggleTheme = () => {\r\n    setIsDark((prevState) => {\r\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\r\n      return !prevState\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\r\n      <SCThemeProvider theme={dark}>{children}</SCThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport { ThemeContext, ThemeContextProvider }\r\n","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\contexts\\BlockContext.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\contexts\\RefreshContext.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\contexts\\Localisation\\languageContext.tsx",["519","520"],"import React, { useState, useEffect } from 'react'\r\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\r\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\r\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\r\n\r\nconst CACHE_KEY = 'pancakeSwapLanguage'\r\n\r\nexport interface LangType {\r\n  code: string\r\n  language: string\r\n}\r\n\r\nexport interface LanguageState {\r\n  selectedLanguage: LangType\r\n  setSelectedLanguage: (langObject: LangType) => void\r\n  translatedLanguage: LangType\r\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\r\n}\r\n\r\nconst LanguageContext = React.createContext({\r\n  selectedLanguage: EN,\r\n  setSelectedLanguage: () => undefined,\r\n  translatedLanguage: EN,\r\n  setTranslatedLanguage: () => undefined,\r\n} as LanguageState)\r\n\r\nconst fileId = 8\r\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\r\nconst stringTranslationsApi = new StringTranslations({\r\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\r\n})\r\n\r\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\r\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\r\n}\r\n\r\nconst LanguageContextProvider = ({ children }) => {\r\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\r\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\r\n  const [translations, setTranslations] = useState<Array<any>>([])\r\n\r\n  const getStoredLang = (storedLangCode: string) => {\r\n    return allLanguages.filter((language) => {\r\n      return language.code === storedLangCode\r\n    })[0]\r\n  }\r\n\r\n  useEffect(() => {\r\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\r\n    if (storedLangCode) {\r\n      const storedLang = getStoredLang(storedLangCode)\r\n      setSelectedLanguage(storedLang)\r\n    } else {\r\n      setSelectedLanguage(EN)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (selectedLanguage) {\r\n      console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`);\r\n      fetch(`./i18n/${selectedLanguage.code}.json`)\r\n        .then(r=>r.json())\r\n      // fetchTranslationsForSelectedLanguage(selectedLanguage)\r\n        .then((translationApiResponse) => {\r\n          if (translationApiResponse.data.length < 1) {\r\n            setTranslations(['error'])\r\n          } else {\r\n            setTranslations(translationApiResponse.data)\r\n          }\r\n        })\r\n        .then(() => setTranslatedLanguage(selectedLanguage))\r\n        .catch((e) => {\r\n          console.error(\"ERROR\");\r\n          console.error(e);\r\n          setTranslations(['error'])\r\n        })\r\n    }\r\n  }, [selectedLanguage, setTranslations])\r\n\r\n  const handleLanguageSelect = (langObject: LangType) => {\r\n    setSelectedLanguage(langObject)\r\n    localStorage.setItem(CACHE_KEY, langObject.code)\r\n  }\r\n\r\n  return (\r\n    <LanguageContext.Provider\r\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\r\n    >\r\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\r\n    </LanguageContext.Provider>\r\n  )\r\n}\r\n\r\nexport { LanguageContext, LanguageContextProvider }\r\n","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\layout\\Page.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\state\\index.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\state\\actions.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\config\\constants\\types.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\Menu\\config.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\Home.tsx",["521"],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\Farms.tsx",["522","523","524"],"import React, { useEffect, useCallback, useState } from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport { Image, Heading } from '@pancakeswap-libs/uikit'\r\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd } from 'state/hooks'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmUserDataAsync } from 'state/actions'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\nimport Divider from './components/Divider'\r\n\r\nexport interface FarmsProps{\r\n  tokenMode?: boolean\r\n}\r\n\r\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\r\n  const { path } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n  const farmsLP = useFarms()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const {tokenMode} = farmsProps;\r\n\r\n  const dispatch = useDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const [stakedOnly, setStakedOnly] = useState(false)\r\n\r\n  let activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X')\r\n  let inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X')\r\n\r\n  if(tokenMode === true){\r\n    activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X')\r\n    inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X')\r\n  }\r\n\r\n  const stakedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  // /!\\ This function will be removed soon\r\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\r\n  // to retrieve assets prices against USD\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay, removed: boolean) => {\r\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\r\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\r\n        //   return farm\r\n        // }\r\n        const cakeRewardPerBlock = new BigNumber(farm.eggPerBlock || 1).times(new BigNumber(farm.poolWeight)) .div(new BigNumber(10).pow(18))\r\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\r\n\r\n        let apy = cakePrice.times(cakeRewardPerYear);\r\n\r\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0);\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n          totalValue = totalValue.times(bnbPrice);\r\n        }\r\n\r\n        if(totalValue.comparedTo(0) > 0){\r\n          apy = apy.div(totalValue);\r\n        }\r\n\r\n        return { ...farm, apy }\r\n      })\r\n      return farmsToDisplayWithAPY.map((farm) => (\r\n        <FarmCard\r\n          key={farm.pid}\r\n          farm={farm}\r\n          removed={removed}\r\n          bnbPrice={bnbPrice}\r\n          cakePrice={cakePrice}\r\n          ethereum={ethereum}\r\n          account={account}\r\n        />\r\n      ))\r\n    },\r\n    [bnbPrice, account, cakePrice, ethereum],\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <Heading as=\"h1\" size=\"lg\" color=\"primary\" mb=\"50px\" style={{ textAlign: 'center' }}>\r\n        {\r\n          tokenMode ?\r\n            TranslateString(10002, 'Stake tokens to earn OIL')\r\n            :\r\n          TranslateString(320, 'Stake LP tokens to earn OIL')\r\n        }\r\n      </Heading>\r\n      <Heading as=\"h2\" color=\"#ffffff\" mb=\"50px\" style={{ textAlign: 'center' }}>\r\n        {TranslateString(10000, 'Deposit Fee will be used to buyback OIL')}\r\n      </Heading>\r\n      <FarmTabButtons stakedOnly={stakedOnly} setStakedOnly={setStakedOnly}/>\r\n      <div>\r\n        <Divider />\r\n        <FlexLayout>\r\n          <Route exact path={`${path}`}>\r\n            {stakedOnly ? farmsList(stakedOnlyFarms, false) : farmsList(activeFarms, false)}\r\n          </Route>\r\n          <Route exact path={`${path}/history`}>\r\n            {farmsList(inactiveFarms, true)}\r\n          </Route>\r\n        </FlexLayout>\r\n      </div>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\multicall.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useI18n.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\config\\constants\\nfts.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\layout\\Container.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useRefresh.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useTheme.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\web3.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\contexts\\Localisation\\translationsContext.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\config\\localisation\\languageCodes.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\translateTextHelpers.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\components\\TwitterCard.tsx",["525","526","527","528","529","530","531","532","533"],"import React from 'react'\r\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport styled from 'styled-components'\r\nimport { Timeline } from 'react-twitter-widgets'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport CardValue from './CardValue'\r\nimport { useFarms } from '../../../state/hooks'\r\n\r\nconst StyledTwitterCard = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 14px;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst TwitterCard = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledTwitterCard>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          {TranslateString(10003, 'Oil News')}\r\n        </Heading>\r\n        <Timeline\r\n          dataSource={{\r\n            sourceType: 'profile',\r\n            screenName: 'oilrigfinance'\r\n          }}\r\n          options={{\r\n            height: '300',\r\n            chrome: \"noheader, nofooter\",\r\n            width: \"530\"\r\n          }}\r\n        />\r\n      </CardBody>\r\n    </StyledTwitterCard>\r\n  )\r\n}\r\n\r\nexport default TwitterCard\r\n","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\Divider.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\components\\CakeStats.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\components\\TotalValueLockedCard.tsx",["534","535","536","537"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useGetStats } from 'hooks/api'\r\nimport { useTotalValue } from '../../../state/hooks'\r\nimport CardValue from './CardValue'\r\nimport CardValueString from './CardValueString'\r\n\r\nconst StyledTotalValueLockedCard = styled(Card)`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n`\r\n\r\nconst TotalValueLockedCard = () => {\r\n  const TranslateString = useI18n()\r\n  // const data = useGetStats()\r\n  const totalValue = useTotalValue();\r\n  // const tvl = totalValue.toFixed(2);\r\n\r\n  return (\r\n    <StyledTotalValueLockedCard>\r\n      <CardBody>\r\n        <Heading color=\"#ffffff\" size=\"lg\" mb=\"24px\">\r\n          {TranslateString(999, 'Total Value Locked (TVL)')}\r\n        </Heading>\r\n        <>\r\n          {/* <Heading size=\"xl\">{`$${tvl}`}</Heading> */}\r\n          {/* <Heading size=\"xl\"> */}\r\n            <CardValueString value=\"Coming Soon\" prefix=\"$\" decimals=\"-\" fontSize=\"40px\"/>\r\n          {/* </Heading> */}\r\n          <Text color=\"textSubtle\">{TranslateString(999, 'Across all Farms and Pools')}</Text>\r\n        </>\r\n      </CardBody>\r\n    </StyledTotalValueLockedCard>\r\n  )\r\n}\r\n\r\nexport default TotalValueLockedCard\r\n","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\components\\FarmStakingCard.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\FarmCard\\FarmCard.tsx",["538"],"import React, { useMemo, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Flex, Text, Skeleton } from '@pancakeswap-libs/uikit'\r\nimport { communityFarms } from 'config/constants'\r\nimport { Farm } from 'state/types'\r\nimport { provider } from 'web3-core'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport CardActionsContainerLock from './CardActionsContainerLock'\r\nimport ApyButton from './ApyButton'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background: linear-gradient(45deg,\r\n  rgba(0, 0, 0, 1) 0%,\r\n  rgba(255, 207, 0, 1) 50%,\r\n  rgba(0, 0, 0, 1) 100%);\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite;\r\n  border-radius: 16px;\r\n  filter: blur(6px);\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n`\r\n\r\nconst FCard = styled.div`\r\n  align-self: baseline;\r\n  background: ${(props) => props.theme.card.background};\r\n  border-radius: 32px;\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 24px;\r\n  position: relative;\r\n  text-align: center;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.borderColor};\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  overflow: hidden;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  cakePrice?: BigNumber\r\n  bnbPrice?: BigNumber\r\n  ethereum?: provider\r\n  account?: string\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethereum, account }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n\r\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\r\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\r\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\r\n  // const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\r\n  const farmImage = farm.isTokenOnly ? farm.tokenSymbol.toLowerCase() : `${farm.tokenSymbol.toLowerCase()}-${farm.quoteTokenSymbol.toLowerCase()}`\r\n\r\n  const totalValue: BigNumber = useMemo(() => {\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      return null\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      return cakePrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    return farm.lpTotalInQuoteToken\r\n  }, [bnbPrice, cakePrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\r\n\r\n  const totalValueFormated = totalValue\r\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    : '-'\r\n\r\n  const lpLabel = farm.lpSymbol\r\n  const earnLabel = 'OIL'\r\n  const farmAPY = farm.apy && farm.apy.times(new BigNumber(100)).toNumber().toLocaleString(undefined, {\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n  })\r\n\r\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses, risk } = farm\r\n\r\n  let content\r\n  if(farm.tokenSymbol === 'OIL'){\r\n    content = <CardActionsContainer farm={farm} ethereum={ethereum} account={account} />\r\n  } else {\r\n    content = <CardActionsContainerLock farm={farm} ethereum={ethereum} account={account} />\r\n  }\r\n\r\n  return (\r\n    <FCard>\r\n      {farm.tokenSymbol === 'OIL' && <StyledCardAccent />}\r\n      <CardHeading\r\n        lpLabel={lpLabel}\r\n        multiplier={farm.multiplier}\r\n        risk={risk}\r\n        depositFee={farm.depositFeeBP}\r\n        farmImage={farmImage}\r\n        tokenSymbol={farm.tokenSymbol}\r\n      />\r\n      {!removed && (\r\n        <Flex justifyContent='space-between' alignItems='center'>\r\n          <Text color=\"#ffffff\">{TranslateString(352, 'APR')}:</Text>\r\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\r\n            {farm.apy ? (\r\n              <>\r\n                <ApyButton\r\n                  lpLabel={lpLabel}\r\n                  quoteTokenAdresses={quoteTokenAdresses}\r\n                  quoteTokenSymbol={quoteTokenSymbol}\r\n                  tokenAddresses={tokenAddresses}\r\n                  cakePrice={cakePrice}\r\n                  apy={farm.apy}\r\n                />\r\n                {farmAPY}%\r\n              </>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n            )}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      <Flex justifyContent='space-between'>\r\n        <Text color=\"#ffffff\">{TranslateString(318, 'Earn')}:</Text>\r\n        <Text bold>{earnLabel}</Text>\r\n      </Flex>\r\n      <Flex justifyContent='space-between'>\r\n        <Text color=\"#ffffff\" style={{ fontSize: '24px' }}>{TranslateString(10001, 'Deposit Fee')}:</Text>\r\n        <Text bold style={{ fontSize: '24px' }}>{(farm.depositFeeBP / 100)}%</Text>\r\n      </Flex>\r\n      {content}\r\n      <Divider />\r\n      <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          removed={removed}\r\n          isTokenOnly={farm.isTokenOnly}\r\n          bscScanAddress={\r\n            farm.isTokenOnly ?\r\n              `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n              :\r\n              `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n          }\r\n          totalValueFormated={totalValueFormated}\r\n          lpLabel={lpLabel}\r\n          quoteTokenAdresses={quoteTokenAdresses}\r\n          quoteTokenSymbol={quoteTokenSymbol}\r\n          tokenAddresses={tokenAddresses}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard\r\n","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\state\\pools\\index.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\addressHelpers.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\state\\farms\\index.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\layout\\Flex.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\FarmTabButtons\\index.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\formatBalance.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useAllEarnings.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useTokenBalance.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\components\\CakeWalletBalance.tsx",["539","540","541"],"import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport CardValue from './CardValue'\r\n\r\nconst CakeWalletBalance = ({ cakeBalance }) => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" style={{ lineHeight: '36px' }}>\r\n        {TranslateString(298, 'Locked')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return <CardValue value={cakeBalance} fontSize=\"24px\" />\r\n}\r\n\r\nexport default CakeWalletBalance\r\n","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\FarmCard\\ApyButton.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\state\\pools\\fetchPools.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\state\\pools\\fetchPoolsUser.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\FarmCard\\CardActionsContainer.tsx",["542"],"import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { Button, Flex, Text } from '@pancakeswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmFromSymbol, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, ethereum, account }) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID];\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if(isTokenOnly){\r\n      return getContract(ethereum as provider, tokenAddress);\r\n    }\r\n    return getContract(ethereum as provider, lpAddress);\r\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction stakedBalance={stakedBalance} tokenBalance={tokenBalance} tokenName={lpName} pid={pid} depositFeeBP={depositFeeBP} />\r\n    ) : (\r\n      <Button mt=\"8px\" fullWidth disabled={requestedApproval} onClick={handleApprove}>\r\n        {TranslateString(999, 'Approve Contract')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\r\n          o\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(999, 'Earned')}\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} />\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {lpName}\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(999, 'Staked')}\r\n        </Text>\r\n      </Flex>\r\n      {!account ? <UnlockButton mt=\"8px\" fullWidth /> : renderApprovalOrStakeButton()}\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\FarmCard\\CardHeading.tsx",["543","544","545","546"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tag, Flex, Heading, Image } from '@pancakeswap-libs/uikit'\r\nimport { CommunityTag, CoreTag, NoFeeTag, RiskTag } from 'components/Tags'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  risk?: number\r\n  depositFee?: number\r\n  farmImage?: string\r\n  tokenSymbol?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 0.25rem;\r\n  }\r\n`\r\n\r\nconst MultiplierTag = styled(Tag)`\r\n  margin-left: 4px;\r\n  color: #000000;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\r\n  lpLabel,\r\n  multiplier,\r\n  risk,\r\n  farmImage,\r\n  tokenSymbol,\r\n  depositFee,\r\n}) => {\r\n  return (\r\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n      <Image src={`/images/farms/${farmImage}.png`} alt={tokenSymbol} width={64} height={64} />\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\r\n        <Heading mb=\"4px\">{lpLabel}</Heading>\r\n        <Flex justifyContent=\"center\">\r\n          {depositFee === 0 ? <NoFeeTag /> : null}\r\n          {/* {isCommunityFarm ? <CommunityTag /> : <CoreTag />} */}\r\n          {/* <RiskTag risk={risk} /> */}\r\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\r\n        </Flex>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\config\\index.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\state\\farms\\fetchFarmUser.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\state\\farms\\fetchFarms.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\components\\CardValue.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\FarmCard\\ApyCalculatorModal.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\components\\CakeHarvestBalance.tsx",["547","548"],"import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useAllEarnings from 'hooks/useAllEarnings'\r\nimport CardValue from './CardValue'\r\n\r\nconst CakeHarvestBalance = ({earningsSum}) => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" style={{ lineHeight: '60px' }}>\r\n        {TranslateString(298, 'Locked')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return <CardValue value={earningsSum} />\r\n}\r\n\r\nexport default CakeHarvestBalance\r\n","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\FarmCard\\DetailsSection.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\config\\constants\\pools.ts",["549","550"],"import { PoolConfig, QuoteToken, PoolCategory } from './types'\r\n\r\nconst pools: PoolConfig[] = [\r\n  // {\r\n  //   sousId: 0,\r\n  //   tokenName: 'CAKE',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n  //   contractAddress: {\r\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n  //     56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://pancakeswap.finance/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '10',\r\n  //   sortOrder: 1,\r\n  //   isFinished: false,\r\n  //   tokenDecimals: 18,\r\n  // },\r\n  // {\r\n  //   sousId: 1,\r\n  //   tokenName: 'TWT',\r\n  //   stakingTokenName: QuoteToken.SYRUP,\r\n  //   stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\r\n  //   contractAddress: {\r\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\r\n  //     56: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://trustwallet.com/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '20',\r\n  //   sortOrder: 999,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  // },\r\n]\r\n\r\nexport default pools\r\n","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\FarmCard\\HarvestAction.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\FarmCard\\StakeAction.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\config\\constants\\contracts.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\config\\constants\\farms.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\erc20.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useFarmsWithBalance.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useHarvest.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\UnlockButton.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useApprove.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useStake.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\Tags.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\config\\constants\\index.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\WithdrawModal.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\DepositModal.tsx",["551","552"],"import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from 'components/TokenInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  depositFeeBP?: number\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' , depositFeeBP = 0}) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        depositFeeBP={depositFeeBP}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\compoundApyHelpers.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\getLiquidityUrlPathParts.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useContract.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\ExpandableSectionButton\\index.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useUnstake.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\config\\constants\\ifo.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\callHelpers.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\ExpandableSectionButton\\ExpandableSectionButton.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useWeb3.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\TokenInput\\index.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\ModalActions\\index.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\TokenInput\\TokenInput.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\ModalActions\\ModalActions.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\Input\\index.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\Spacer\\index.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\Input\\Input.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\components\\Spacer\\Spacer.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\components\\CardValueString.tsx",["553","554","555","556"],"import React, { useEffect, useRef } from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface CardValueStringProps {\r\n  value: string\r\n  decimals?: string\r\n  fontSize?: string\r\n  prefix?: string\r\n  color?: string\r\n}\r\n\r\nconst CardValueString: React.FC<CardValueStringProps> = ({ value, decimals, fontSize, prefix, color }) => {\r\n  return (\r\n    <Text color={color} bold fontSize={fontSize}>\r\n      {value}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default CardValueString\r\n","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\components\\EarnCard.tsx",["557","558","559","560","561","562","563"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useGetStats } from 'hooks/api'\r\nimport { useTotalValue } from '../../../state/hooks'\r\nimport CardValue from './CardValue'\r\nimport CardValueString from './CardValueString'\r\nimport CardValueStringNormal from './CardValueStringNormal'\r\n\r\nconst StyledEarnCard = styled(Card)`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n`\r\n\r\nconst EarnCard = () => {\r\n  const TranslateString = useI18n()\r\n  // const data = useGetStats()\r\n\r\n  return (\r\n    <StyledEarnCard>\r\n      <CardBody>\r\n        <>\r\n          {/* <Heading size=\"xl\">{`$${tvl}`}</Heading> */}\r\n          {/* <Heading size=\"xl\"> */}\r\n            <CardValueStringNormal value=\"Earn up to\" prefix=\"$\" decimals=\"-\" fontSize=\"20px\"/>\r\n            <CardValueString value=\"- % APR\" prefix=\"$\" decimals=\"-\" fontSize=\"40px\"/>\r\n            <CardValueStringNormal value=\"in the Oil Refinery and Oil Tanks\" prefix=\"$\" decimals=\"-\" fontSize=\"20px\"/>\r\n          {/* </Heading> */}\r\n        </>\r\n      </CardBody>\r\n    </StyledEarnCard>\r\n  )\r\n}\r\n\r\nexport default EarnCard","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\components\\CardValueStringNormal.tsx",["564","565","566","567"],"import React, { useEffect, useRef } from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface CardValueStringNormalProps {\r\n  value: string\r\n  decimals?: string\r\n  fontSize?: string\r\n  prefix?: string\r\n  color?: string\r\n}\r\n\r\nconst CardValueStringNormal: React.FC<CardValueStringNormalProps> = ({ value, decimals, fontSize, prefix, color }) => {\r\n  return (\r\n    <Text color={color} fontSize={fontSize}>\r\n      {value}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default CardValueStringNormal\r\n","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Home\\components\\StakeCard.tsx",["568","569","570","571","572","573","574"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useGetStats } from 'hooks/api'\r\nimport { useTotalValue } from '../../../state/hooks'\r\nimport CardValue from './CardValue'\r\nimport CardValueString from './CardValueString'\r\nimport CardValueStringNormal from './CardValueStringNormal'\r\n\r\nconst StyledStakeCard = styled(Card)`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  background-color: #ffcf00;\r\n`\r\n\r\nconst StakeCard = () => {\r\n  const TranslateString = useI18n()\r\n  // const data = useGetStats()\r\n\r\n  return (\r\n    <StyledStakeCard>\r\n      <CardBody>\r\n        <>\r\n          {/* <Heading size=\"xl\">{`$${tvl}`}</Heading> */}\r\n          {/* <Heading size=\"xl\"> */}\r\n            <CardValueStringNormal value=\"Stake\" prefix=\"$\" decimals=\"-\" fontSize=\"20px\" color=\"#000000\"/>\r\n            <CardValueString value=\"OIL, BNB, BUSD, CAKE\" prefix=\"$\" decimals=\"-\" fontSize=\"40px\" color=\"#000000\"/>\r\n            <CardValueStringNormal value=\"in Pools\" prefix=\"$\" decimals=\"-\" fontSize=\"20px\" color=\"#000000\"/>\r\n          {/* </Heading> */}\r\n        </>\r\n      </CardBody>\r\n    </StyledStakeCard>\r\n  )\r\n}\r\n\r\nexport default StakeCard","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Farms\\components\\FarmCard\\CardActionsContainerLock.tsx",["575","576","577","578","579","580"],"import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { Button, Flex, Text } from '@pancakeswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmFromSymbol, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsLockProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n}\r\n\r\nconst CardActionsLock: React.FC<FarmCardActionsLockProps> = ({ farm, ethereum, account }) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID];\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if(isTokenOnly){\r\n      return getContract(ethereum as provider, tokenAddress);\r\n    }\r\n    return getContract(ethereum as provider, lpAddress);\r\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <Button mt=\"8px\" fullWidth disabled={requestedApproval}>Coming Soon</Button>\r\n    ) : (\r\n      <Button mt=\"8px\" fullWidth disabled={requestedApproval}>Coming Soon</Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\r\n          OIL\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(999, 'Earned')}\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} />\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {lpName}\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(999, 'Staked')}\r\n        </Text>\r\n      </Flex>\r\n      {!account ? <UnlockButton mt=\"8px\" fullWidth /> : renderApprovalOrStakeButton()}\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActionsLock\r\n","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\index.tsx",["581"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Page from 'components/layout/Page'\r\nimport HowItWorks from './components/HowItWorks'\r\nimport NftList from './components/NftList'\r\nimport NftProvider from './contexts/NftProvider'\r\nimport NftInfo from './components/NftInfo'\r\n\r\nconst StyledHero = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 32px;\r\n`\r\n\r\nconst Nft = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <NftProvider>\r\n      <Page>\r\n        <StyledHero>\r\n          <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n            All OIL NFTs\r\n          </Heading>\r\n          <Heading as=\"h2\" size=\"lg\" color=\"secondary\">\r\n            {TranslateString(999, 'Collect NFTs and use it to get incredible bonuses!')}\r\n          </Heading>\r\n        </StyledHero>\r\n        <NftList />\r\n        <HowItWorks />\r\n      </Page>\r\n    </NftProvider>\r\n  )\r\n}\r\n\r\nexport default Nft\r\n","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\NftInfo.tsx",[],["582","583","584","585","586"],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\HowItWorks.tsx",["587"],"// @ts-nocheck\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, Text as UIKitText, ArrowForwardIcon } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Container from 'components/layout/Container'\r\n\r\nconst StyledHowItWorks = styled.div`\r\n  border-top: 1px solid ${({ theme }) => theme.colors.textSubtle};\r\n  padding: 24px 0;\r\n`\r\n\r\nconst Section = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Icon = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst Text = styled(UIKitText)`\r\n  flex: 1;\r\n  padding: 0 8px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: start;\r\n  display: flex;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst HowItWorks = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Container>\r\n      <StyledHowItWorks>\r\n        <Section>\r\n          <Heading id=\"how-it-works\" color=\"secondary\" size=\"lg\" mb=\"16px\">\r\n            {TranslateString(632, 'How it works')}\r\n          </Heading>\r\n          <Row>\r\n            <Icon>\r\n              <ArrowForwardIcon />\r\n            </Icon>\r\n            <Text>\r\n              {TranslateString(\r\n                999,\r\n                'You can buy NFT\\'s on this page once the OilRig is live.',\r\n              )}\r\n            </Text>\r\n          </Row>\r\n          <Row>\r\n            <Icon>\r\n              <ArrowForwardIcon />\r\n            </Icon>\r\n            <Text>\r\n              {TranslateString(999, 'When you acquire one NFT the bonus will be auto applied to the Oil Field or the Oil Deposit.')}\r\n            </Text>\r\n          </Row>\r\n          <Row>\r\n            <Icon>\r\n              <ArrowForwardIcon />\r\n            </Icon>\r\n            <Text>\r\n              {TranslateString(\r\n                999,\r\n                \"The bonus only works one time per NFT acquired.\",\r\n              )}\r\n            </Text>\r\n          </Row>\r\n          <Row>\r\n            <Icon>\r\n              <ArrowForwardIcon />\r\n            </Icon>\r\n            <Text>\r\n              {TranslateString(\r\n                999,\r\n                \"If you have more than one NFT with eligible bonus reward only the higher bonus NFT will apply, the rest of the NFT will be queued.\",\r\n              )}\r\n            </Text>\r\n          </Row>\r\n        </Section>\r\n      </StyledHowItWorks>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default HowItWorks\r\n","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\NftList.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\contexts\\NftProvider.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\utils\\contracts.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\StatusCard.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\NftProgress.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\NftProgressSimple.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\NftGrid.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\hooks\\useBlock.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\NftCard\\index.tsx",["588","589"],"import React, { useState, useContext, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Heading,\r\n  Tag,\r\n  Button,\r\n  ChevronUpIcon,\r\n  ChevronDownIcon,\r\n  Text,\r\n  CardFooter,\r\n  useModal,\r\n} from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Nft } from 'config/constants/types'\r\nimport InfoRow from '../InfoRow'\r\nimport Image from '../Image'\r\nimport { NftProviderContext } from '../../contexts/NftProvider'\r\nimport { getPancakeRabbitContract } from '../../utils/contracts'\r\nimport ClaimNftModal from '../ClaimNftModal'\r\nimport BurnNftModal from '../BurnNftModal'\r\nimport TransferNftModal from '../TransferNftModal'\r\n\r\ninterface NftCardProps {\r\n  nft: Nft\r\n}\r\n\r\nconst Header = styled(InfoRow)`\r\n  min-height: 28px;\r\n`\r\n\r\nconst DetailsButton = styled(Button).attrs({ variant: 'text', fullWidth: true })`\r\n  height: auto;\r\n  padding: 16px 24px;\r\n\r\n  &:hover:not(:disabled):not(:active) {\r\n    background-color: transparent;\r\n  }\r\n\r\n  &:focus:not(:active) {\r\n    box-shadow: none;\r\n  }\r\n`\r\n\r\nconst InfoBlock = styled.div`\r\n  padding: 0px;\r\n`\r\n\r\nconst Value = styled(Text)`\r\n  font-weight: 600;\r\n`\r\n\r\nconst NftCard: React.FC<NftCardProps> = ({ nft }) => {\r\n  const [state, setState] = useState({\r\n    isLoading: false,\r\n    isOpen: false,\r\n    bunnyCount: 0,\r\n    bunnyBurnCount: 0,\r\n  })\r\n  const TranslateString = useI18n()\r\n  const {\r\n    isInitialized,\r\n    canClaim,\r\n    hasClaimed,\r\n    canBurnNft,\r\n    totalSupplyDistributed,\r\n    currentDistributedSupply,\r\n    getTokenIds,\r\n    reInitialize,\r\n  } = useContext(NftProviderContext)\r\n  const walletCanClaim = canClaim && !hasClaimed\r\n  const { bunnyId, name, previewImage, originalImage, description } = nft\r\n  const tokenIds = getTokenIds(bunnyId)\r\n  const isSupplyAvailable = currentDistributedSupply < totalSupplyDistributed\r\n  const walletOwnsNft = tokenIds && tokenIds.length > 0\r\n  const Icon = state.isOpen ? ChevronUpIcon : ChevronDownIcon\r\n\r\n  const fetchDetails = useCallback(async () => {\r\n    setState((prevState) => ({ ...prevState, isLoading: true }))\r\n    try {\r\n      const { methods } = getPancakeRabbitContract()\r\n      const bunnyCount = await methods.bunnyCount(bunnyId).call()\r\n      const bunnyBurnCount = await methods.bunnyBurnCount(bunnyId).call()\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isLoading: false,\r\n        isDataFetched: true,\r\n        bunnyCount: parseInt(bunnyCount, 10),\r\n        bunnyBurnCount: parseInt(bunnyBurnCount, 10),\r\n      }))\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }, [bunnyId])\r\n\r\n  const handleClick = async () => {\r\n    if (state.isOpen) {\r\n      setState((prevState) => ({ ...prevState, isOpen: !prevState.isOpen }))\r\n    } else {\r\n      try {\r\n        await fetchDetails()\r\n      } catch (error) {\r\n        console.error(error)\r\n      } finally {\r\n        setState((prevState) => ({ ...prevState, isOpen: !prevState.isOpen }))\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleSuccess = () => {\r\n    fetchDetails()\r\n    reInitialize()\r\n  }\r\n\r\n  const [onPresentClaimModal] = useModal(<ClaimNftModal nft={nft} onSuccess={handleSuccess} />)\r\n  const [onPresentBurnModal] = useModal(<BurnNftModal nft={nft} tokenIds={tokenIds} onSuccess={handleSuccess} />)\r\n  const [onPresentTransferModal] = useModal(\r\n    <TransferNftModal nft={nft} tokenIds={tokenIds} onSuccess={handleSuccess} />,\r\n  )\r\n\r\n  return (\r\n    <Card isActive={walletOwnsNft}>\r\n      <Image src={`/images/nfts/${previewImage}`} alt={name} originalLink={walletOwnsNft ? originalImage : null} />\r\n      <CardBody>\r\n        <Header>\r\n          <Heading mb=\"16px\">{name}</Heading>\r\n          {isInitialized && walletCanClaim && (\r\n            <Tag outline variant=\"success\">\r\n              {TranslateString(526, 'Available')}\r\n            </Tag>\r\n          )}\r\n          {isInitialized && tokenIds && (\r\n            <Tag outline variant=\"secondary\">\r\n              {TranslateString(999, 'In Wallet')}\r\n            </Tag>\r\n          )}\r\n        </Header>\r\n        {isInitialized && walletOwnsNft && (\r\n          <Button fullWidth variant=\"secondary\" mt=\"24px\" onClick={onPresentTransferModal}>\r\n            {TranslateString(999, 'Transfer')}\r\n          </Button>\r\n        )}\r\n        {isInitialized && walletCanClaim && isSupplyAvailable && (\r\n          <Button fullWidth onClick={onPresentClaimModal} mt=\"24px\">\r\n            {TranslateString(999, 'Claim this NFT')}\r\n          </Button>\r\n        )}\r\n        {isInitialized && canBurnNft && walletOwnsNft && (\r\n          <Button variant=\"danger\" fullWidth onClick={onPresentBurnModal} mt=\"24px\">\r\n            {TranslateString(999, 'Trade in for CAKE')}\r\n          </Button>\r\n        )}\r\n        <InfoBlock>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\" style={{ textAlign: 'left' }}>\r\n            {description}\r\n          </Text>\r\n          <InfoRow>\r\n            <Text>{TranslateString(999, 'NFT value')}:</Text>\r\n            <Value>- OIL</Value>\r\n          </InfoRow>\r\n          <InfoRow>\r\n            <Text>{TranslateString(999, 'Number minted')}:</Text>\r\n            <Value>0</Value>\r\n          </InfoRow>\r\n          <InfoRow>\r\n            <Text>{TranslateString(999, 'Number burned')}:</Text>\r\n            <Value>0</Value>\r\n          </InfoRow>\r\n        </InfoBlock>\r\n      </CardBody>\r\n      <CardFooter p=\"0\">\r\n        <DetailsButton>Coming soon</DetailsButton>\r\n      </CardFooter>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default NftCard\r\n","C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\NftInWalletCard.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\YouWonCard.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\NoNftsToClaimCard.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\InfoRow.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\getTimePeriods.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\utils\\formatTimePeriod.ts",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\Image.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\BurnNftModal.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\ClaimNftModal.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\TransferNftModal.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\SecondaryCard.tsx",[],"C:\\Users\\Pedro\\goose_project_v8_front\\goose-frontend-farms\\src\\views\\Nft\\components\\CardContent.tsx",[],{"ruleId":"590","replacedBy":"591"},{"ruleId":"592","replacedBy":"593"},{"ruleId":"594","replacedBy":"595"},{"ruleId":"596","replacedBy":"597"},{"ruleId":"598","replacedBy":"599"},{"ruleId":"600","severity":1,"message":"601","line":2,"column":35,"nodeType":"602","messageId":"603","endLine":2,"endColumn":43},{"ruleId":"600","severity":1,"message":"604","line":2,"column":21,"nodeType":"602","messageId":"603","endLine":2,"endColumn":28},{"ruleId":"600","severity":1,"message":"605","line":5,"column":37,"nodeType":"602","messageId":"603","endLine":5,"endColumn":62},{"ruleId":"600","severity":1,"message":"606","line":3,"column":10,"nodeType":"602","messageId":"603","endLine":3,"endColumn":15},{"ruleId":"600","severity":1,"message":"607","line":33,"column":7,"nodeType":"602","messageId":"603","endLine":33,"endColumn":43},{"ruleId":"608","severity":1,"message":"609","line":60,"column":7,"nodeType":"610","messageId":"611","endLine":60,"endColumn":18},{"ruleId":"600","severity":1,"message":"612","line":7,"column":8,"nodeType":"602","messageId":"603","endLine":7,"endColumn":19},{"ruleId":"600","severity":1,"message":"613","line":7,"column":10,"nodeType":"602","messageId":"603","endLine":7,"endColumn":15},{"ruleId":"600","severity":1,"message":"614","line":8,"column":27,"nodeType":"602","messageId":"603","endLine":8,"endColumn":41},{"ruleId":"600","severity":1,"message":"615","line":8,"column":43,"nodeType":"602","messageId":"603","endLine":8,"endColumn":56},{"ruleId":"600","severity":1,"message":"616","line":2,"column":35,"nodeType":"602","messageId":"603","endLine":2,"endColumn":39},{"ruleId":"600","severity":1,"message":"617","line":3,"column":8,"nodeType":"602","messageId":"603","endLine":3,"endColumn":17},{"ruleId":"600","severity":1,"message":"618","line":6,"column":10,"nodeType":"602","messageId":"603","endLine":6,"endColumn":26},{"ruleId":"600","severity":1,"message":"619","line":7,"column":10,"nodeType":"602","messageId":"603","endLine":7,"endColumn":24},{"ruleId":"600","severity":1,"message":"620","line":7,"column":26,"nodeType":"602","messageId":"603","endLine":7,"endColumn":42},{"ruleId":"600","severity":1,"message":"621","line":9,"column":10,"nodeType":"602","messageId":"603","endLine":9,"endColumn":24},{"ruleId":"600","severity":1,"message":"622","line":10,"column":8,"nodeType":"602","messageId":"603","endLine":10,"endColumn":17},{"ruleId":"600","severity":1,"message":"623","line":11,"column":10,"nodeType":"602","messageId":"603","endLine":11,"endColumn":18},{"ruleId":"600","severity":1,"message":"624","line":18,"column":7,"nodeType":"602","messageId":"603","endLine":18,"endColumn":10},{"ruleId":"600","severity":1,"message":"625","line":3,"column":35,"nodeType":"602","messageId":"603","endLine":3,"endColumn":43},{"ruleId":"600","severity":1,"message":"626","line":5,"column":10,"nodeType":"602","messageId":"603","endLine":5,"endColumn":21},{"ruleId":"600","severity":1,"message":"622","line":7,"column":8,"nodeType":"602","messageId":"603","endLine":7,"endColumn":17},{"ruleId":"600","severity":1,"message":"627","line":19,"column":9,"nodeType":"602","messageId":"603","endLine":19,"endColumn":19},{"ruleId":"600","severity":1,"message":"628","line":5,"column":10,"nodeType":"602","messageId":"603","endLine":5,"endColumn":24},{"ruleId":"600","severity":1,"message":"629","line":4,"column":8,"nodeType":"602","messageId":"603","endLine":4,"endColumn":23},{"ruleId":"600","severity":1,"message":"621","line":6,"column":10,"nodeType":"602","messageId":"603","endLine":6,"endColumn":24},{"ruleId":"600","severity":1,"message":"618","line":7,"column":10,"nodeType":"602","messageId":"603","endLine":7,"endColumn":26},{"ruleId":"600","severity":1,"message":"630","line":8,"column":26,"nodeType":"602","messageId":"603","endLine":8,"endColumn":43},{"ruleId":"600","severity":1,"message":"631","line":4,"column":10,"nodeType":"602","messageId":"603","endLine":4,"endColumn":22},{"ruleId":"600","severity":1,"message":"632","line":4,"column":24,"nodeType":"602","messageId":"603","endLine":4,"endColumn":31},{"ruleId":"600","severity":1,"message":"633","line":4,"column":43,"nodeType":"602","messageId":"603","endLine":4,"endColumn":50},{"ruleId":"600","severity":1,"message":"634","line":29,"column":3,"nodeType":"602","messageId":"603","endLine":29,"endColumn":7},{"ruleId":"600","severity":1,"message":"617","line":4,"column":8,"nodeType":"602","messageId":"603","endLine":4,"endColumn":17},{"ruleId":"600","severity":1,"message":"635","line":6,"column":8,"nodeType":"602","messageId":"603","endLine":6,"endColumn":22},{"ruleId":"600","severity":1,"message":"636","line":1,"column":22,"nodeType":"602","messageId":"603","endLine":1,"endColumn":32},{"ruleId":"600","severity":1,"message":"637","line":1,"column":34,"nodeType":"602","messageId":"603","endLine":1,"endColumn":46},{"ruleId":"600","severity":1,"message":"638","line":17,"column":59,"nodeType":"602","messageId":"603","endLine":17,"endColumn":68},{"ruleId":"600","severity":1,"message":"639","line":19,"column":21,"nodeType":"602","messageId":"603","endLine":19,"endColumn":33},{"ruleId":"600","severity":1,"message":"640","line":1,"column":17,"nodeType":"602","messageId":"603","endLine":1,"endColumn":26},{"ruleId":"600","severity":1,"message":"641","line":1,"column":28,"nodeType":"602","messageId":"603","endLine":1,"endColumn":34},{"ruleId":"600","severity":1,"message":"642","line":12,"column":67,"nodeType":"602","messageId":"603","endLine":12,"endColumn":75},{"ruleId":"600","severity":1,"message":"643","line":12,"column":87,"nodeType":"602","messageId":"603","endLine":12,"endColumn":93},{"ruleId":"600","severity":1,"message":"644","line":3,"column":26,"nodeType":"602","messageId":"603","endLine":3,"endColumn":33},{"ruleId":"600","severity":1,"message":"625","line":3,"column":35,"nodeType":"602","messageId":"603","endLine":3,"endColumn":43},{"ruleId":"600","severity":1,"message":"616","line":3,"column":45,"nodeType":"602","messageId":"603","endLine":3,"endColumn":49},{"ruleId":"600","severity":1,"message":"626","line":5,"column":10,"nodeType":"602","messageId":"603","endLine":5,"endColumn":21},{"ruleId":"600","severity":1,"message":"645","line":6,"column":10,"nodeType":"602","messageId":"603","endLine":6,"endColumn":23},{"ruleId":"600","severity":1,"message":"622","line":7,"column":8,"nodeType":"602","messageId":"603","endLine":7,"endColumn":17},{"ruleId":"600","severity":1,"message":"646","line":18,"column":9,"nodeType":"602","messageId":"603","endLine":18,"endColumn":24},{"ruleId":"600","severity":1,"message":"640","line":1,"column":17,"nodeType":"602","messageId":"603","endLine":1,"endColumn":26},{"ruleId":"600","severity":1,"message":"641","line":1,"column":28,"nodeType":"602","messageId":"603","endLine":1,"endColumn":34},{"ruleId":"600","severity":1,"message":"642","line":12,"column":79,"nodeType":"602","messageId":"603","endLine":12,"endColumn":87},{"ruleId":"600","severity":1,"message":"643","line":12,"column":99,"nodeType":"602","messageId":"603","endLine":12,"endColumn":105},{"ruleId":"600","severity":1,"message":"644","line":3,"column":26,"nodeType":"602","messageId":"603","endLine":3,"endColumn":33},{"ruleId":"600","severity":1,"message":"625","line":3,"column":35,"nodeType":"602","messageId":"603","endLine":3,"endColumn":43},{"ruleId":"600","severity":1,"message":"616","line":3,"column":45,"nodeType":"602","messageId":"603","endLine":3,"endColumn":49},{"ruleId":"600","severity":1,"message":"626","line":5,"column":10,"nodeType":"602","messageId":"603","endLine":5,"endColumn":21},{"ruleId":"600","severity":1,"message":"645","line":6,"column":10,"nodeType":"602","messageId":"603","endLine":6,"endColumn":23},{"ruleId":"600","severity":1,"message":"622","line":7,"column":8,"nodeType":"602","messageId":"603","endLine":7,"endColumn":17},{"ruleId":"600","severity":1,"message":"646","line":19,"column":9,"nodeType":"602","messageId":"603","endLine":19,"endColumn":24},{"ruleId":"600","severity":1,"message":"630","line":8,"column":26,"nodeType":"602","messageId":"603","endLine":8,"endColumn":43},{"ruleId":"600","severity":1,"message":"647","line":12,"column":8,"nodeType":"602","messageId":"603","endLine":12,"endColumn":19},{"ruleId":"600","severity":1,"message":"648","line":31,"column":58,"nodeType":"602","messageId":"603","endLine":31,"endColumn":70},{"ruleId":"600","severity":1,"message":"649","line":32,"column":22,"nodeType":"602","messageId":"603","endLine":32,"endColumn":34},{"ruleId":"600","severity":1,"message":"650","line":32,"column":36,"nodeType":"602","messageId":"603","endLine":32,"endColumn":49},{"ruleId":"600","severity":1,"message":"651","line":47,"column":9,"nodeType":"602","messageId":"603","endLine":47,"endColumn":22},{"ruleId":"600","severity":1,"message":"652","line":9,"column":8,"nodeType":"602","messageId":"603","endLine":9,"endColumn":15},{"ruleId":"590","replacedBy":"653"},{"ruleId":"592","replacedBy":"654"},{"ruleId":"594","replacedBy":"655"},{"ruleId":"596","replacedBy":"656"},{"ruleId":"598","replacedBy":"657"},{"ruleId":"600","severity":1,"message":"658","line":4,"column":10,"nodeType":"602","messageId":"603","endLine":4,"endColumn":16},{"ruleId":"600","severity":1,"message":"659","line":77,"column":9,"nodeType":"602","messageId":"603","endLine":77,"endColumn":13},{"ruleId":"600","severity":1,"message":"660","line":98,"column":9,"nodeType":"602","messageId":"603","endLine":98,"endColumn":20},"lines-around-directive",["661"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useMemo' is defined but never used.","'fetchPoolsPublicDataAsync' is defined but never used.","'light' is defined but never used.","'fetchTranslationsForSelectedLanguage' is assigned a value but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'LotteryCard' is defined but never used.","'Image' is defined but never used.","'CAKE_PER_BLOCK' is defined but never used.","'CAKE_POOL_PID' is defined but never used.","'Text' is defined but never used.","'BigNumber' is defined but never used.","'getBalanceNumber' is defined but never used.","'useTotalSupply' is defined but never used.","'useBurnedBalance' is defined but never used.","'getCakeAddress' is defined but never used.","'CardValue' is defined but never used.","'useFarms' is defined but never used.","'Row' is assigned a value but never used.","'Skeleton' is defined but never used.","'useGetStats' is defined but never used.","'totalValue' is assigned a value but never used.","'communityFarms' is defined but never used.","'useTokenBalance' is defined but never used.","'useFarmFromSymbol' is defined but never used.","'CommunityTag' is defined but never used.","'CoreTag' is defined but never used.","'RiskTag' is defined but never used.","'risk' is defined but never used.","'useAllEarnings' is defined but never used.","'QuoteToken' is defined but never used.","'PoolCategory' is defined but never used.","'onConfirm' is defined but never used.","'setPendingTx' is assigned a value but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'decimals' is defined but never used.","'prefix' is defined but never used.","'Heading' is defined but never used.","'useTotalValue' is defined but never used.","'TranslateString' is assigned a value but never used.","'StakeAction' is defined but never used.","'depositFeeBP' is assigned a value but never used.","'tokenBalance' is assigned a value but never used.","'stakedBalance' is assigned a value but never used.","'handleApprove' is assigned a value but never used.","'NftInfo' is defined but never used.",["661"],[],[],[],[],"'Button' is defined but never used.","'Icon' is assigned a value but never used.","'handleClick' is assigned a value but never used.","padding-line-between-statements"]